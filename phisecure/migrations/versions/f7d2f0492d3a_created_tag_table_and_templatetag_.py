"""created tag table and templatetag template to represent a many to many relationship between  tag and template

Revision ID: f7d2f0492d3a
Revises: 51352265986f
Create Date: 2024-11-16 14:58:59.147270

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'f7d2f0492d3a'
down_revision = '51352265986f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('template_tags',
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['phishing_templates.id'], ),
    sa.PrimaryKeyConstraint('template_id', 'tag_id')
    )
    with op.batch_alter_table('phishing_templates', schema=None) as batch_op:
        batch_op.drop_index('ix_phishing_templates_tags')
        batch_op.drop_column('tags')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('phishing_templates', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tags', mysql.VARCHAR(length=120), nullable=False))
        batch_op.create_index('ix_phishing_templates_tags', ['tags'], unique=False)

    op.drop_table('template_tags')
    op.drop_table('tags')
    # ### end Alembic commands ###
